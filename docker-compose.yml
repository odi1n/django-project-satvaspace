version: '3.3'

services:
  postgres:
    container_name: dps_postgres
    image: postgres:13.3
    restart: always
    hostname: postgres
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: '${POSTGRES_PORT}'
      CONFIGS: "listen_addresses:'*',max_replication_slots:5"
    #    expose:
    #      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    healthcheck:
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    container_name: dps_redis
    image: redis:5-alpine
    restart: always
    ports:
      - 6379:6379

  celery:
    container_name: dps_celery
    image: celery:4.0.2
    restart: always
    build: ./project
    command: celery -A django_project worker -Q low,default,high --loglevel=info
    env_file: .env
    volumes:
      - ./project:/usr/src/app
    depends_on:
      - postgres
      - redis

  autotests:
    container_name: dps_autotests
    build: ./project
    command: pytest
    volumes:
      - ./project:/usr/src/app
    env_file: .env
    depends_on:
      - postgres

  runserver:
    container_name: dps_runserver
    build: ./project
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./project:/usr/src/app
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      - celery